@model LabProject.Models.Samples
@using Newtonsoft.Json
@{
    var Manager = Context.Session.GetString("Manager");
    var currentPath = Context.Request.Path;
    var userRoleSession = Context.Session.GetString("UserRole");
    var userRole = userRoleSession != null ? JsonConvert.DeserializeObject<int>(userRoleSession) : (int?)null;
    if (Manager == null && currentPath != "/Home/Index")
    {
        Context.Response.Redirect("/Home/Index");
        return;
    }
    ViewData["Title"] = Model.SampleName;
}

<div class="bg-blue-light">
    <div class="container">
        <div class="row ">
            <div class="card col-md-3 mt-3">
                <div class="card-header text-center bg-blue mt-2 fw-bold text-success fs-5 border">
                    <div> @Html.DisplayFor(model => model.SampleName)</div>
                </div>
                <div class="card-body border mb-3">
                    <dl class="row">
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.SampleType.TypeID)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.SampleType.TypeName)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Species)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Species)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Genotype)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Genotype)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Serotype)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Serotype)
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.Quantity)
                        </dt>
                        <dd class="col-sm-8" id="currentQuantity">
                            @Html.DisplayFor(model => model.Quantity)
                        </dd>
                        <dt class="col-sm-4">
                            存放位置
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.Refrigerator) 冰箱，第 @Html.DisplayFor(model => model.Level) 層，<br />第 @Html.DisplayFor(model => model.Shelf) 架，第 @Html.DisplayFor(model => model.Box) 盒
                        </dd>
                        <dt class="col-sm-4">
                            @Html.DisplayNameFor(model => model.BoxName)
                        </dt>
                        <dd class="col-sm-8">
                            @Html.DisplayFor(model => model.BoxName)
                        </dd>
                    </dl>
                </div>
            </div>

            <div class="col-md-9" id="sampleRecordList">
                @await Component.InvokeAsync("VCSampleRecord", new { Sid = Model.SampleID })
            </div>
            <!-- Button trigger modal -->
            <div>
                @if (userRole != 1)
                {
                    <button type="button" class="btn btn-success mt-3" data-bs-toggle="modal" data-bs-target="#ReFormModal">
                        新增使用紀錄
                    </button>
                }
            </div>
            <!-- Modal -->
            <div class="modal fade" id="ReFormModal" data-bs-backdrop="static" data-bs-keyboard="false">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header bg-darkblue2 text-white">
                            <h1 class="modal-title fs-5" id="exampleModalLabel"> @Model.SampleName</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body bg-light" id="ReForm">
                        </div>
                        <div class="modal-footer bg-darkblue2">
                            <button type="button" class="btn btn-light text-success fw-bold" onclick="ReCreate()">確定新增</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="text-end fs-5 fw-bold">
            <a asp-action="Index" asp-route-typeid="@Model.SampleType.TypeID">回樣本資料主畫面</a>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        // 載入表單並啟用驗證
        $('#ReForm').load(`/PostSampleRecords/Create?SId=@(Model.SampleID)`, function () {
            // 手動啟用表單驗證
            $.validator.unobtrusive.parse($('#ReForm'));
        });

        const ReFormModal = new bootstrap.Modal(document.getElementById('ReFormModal'))

        function ReCreate() {
            if ($('#reForm').valid()) {
                $.ajax({
                    type: "Post",
                    url: `/PostSampleRecords/Create`,
                    data: $('#reForm').serialize(),
                    success: (data) => {
                        if ($(data).find(".validation-summary-errors").length > 0) {
                            // 有錯誤，將表單更新為伺服器回傳的部分視圖
                            $('#ReForm').html(data);
                            // 重新啟用驗證器
                            $.validator.unobtrusive.parse($('#ReForm'));
                        } else {
                            if (data.quantity > @Model.Quantity) {
                                $("#errorMes").text("請注意，使用數量不得超過庫存量");
                            } else {
                                $('input[name="TransactionType"]').prop('checked', false);
                                $('#Quantity').val('');
                                $("#errorMes").text('').hide();

                                let currentQuantity = parseInt($('#currentQuantity').text()); //先取得當前顯示的數量
                                let newQuantity = data.transactionType ? currentQuantity + data.quantity : currentQuantity - data.quantity;
                                $('#currentQuantity').text(newQuantity); // 更新頁面上的數量顯示

                                ReFormModal.hide();

                                $('#sampleRecordList').load(`/PostSampleRecords/GetVCSampleRecord/@(Model.SampleID)`);
                            }
                        }
                    }
                });
            }
        }

    </script>
}
